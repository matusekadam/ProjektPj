#include <WiFi.h>
#include <FirebaseESP32.h>
#include <NewPing.h>
#include <ArduinoJson.h> 

#define WIFI_SSID "Nazev wifi site"
#define WIFI_PASSWORD "Heslo wifi site"
#define FIREBASE_HOST "https://database-5e783-default-rtdb.europe-west1.firebasedatabase.app/test"
#define FIREBASE_PATH "test/fullness"

#define TRIGGER_PIN 12
#define ECHO_PIN 14
#define DEFAULT_DISTANCE 15 

WiFiClient wifiClient;
FirebaseData firebaseData;

void setup() {
  Serial.begin(115200);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println("Connected to WiFi");

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH, wifiClient);

  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
}

void loop() {
  float distance = measureDistance();
  float fullness = calculateFullness(distance);

  
  DynamicJsonDocument jsonDoc(200);
  jsonDoc["fullness"] = fullness;

  
  String jsonString;
  serializeJson(jsonDoc, jsonString);

  
  if (Firebase.setString(firebaseData, FIREBASE_PATH, jsonString)) {
    Serial.println("Fullness saved to Firebase: " + String(fullness) + "%");
  } else {
    Serial.println("Failed to save fullness to Firebase");
  }

  delay(10000); // Wait for 10 seconds before sending another message
}

float measureDistance() {
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);

  float duration = pulseIn(ECHO_PIN, HIGH);
  float distance = duration * 0.034 / 2; 
  return distance;
}

float calculateFullness(float distance) {
  float fullness = ((DEFAULT_DISTANCE - distance) / DEFAULT_DISTANCE) * 100;
  if (fullness < 0) {
    fullness = 0; 
  }
  return fullness;
}
